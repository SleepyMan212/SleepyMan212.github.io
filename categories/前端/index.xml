<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>前端 on sleepycookie&#39;s blog</title>
    <link>https://sleepyman212.github.io/categories/%E5%89%8D%E7%AB%AF/</link>
    <description>Recent content in 前端 on sleepycookie&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Thu, 05 Sep 2019 01:26:04 +0800</lastBuildDate>
    
	<atom:link href="https://sleepyman212.github.io/categories/%E5%89%8D%E7%AB%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AlphaVSOpacity</title>
      <link>https://sleepyman212.github.io/post/alphavsopacity/</link>
      <pubDate>Thu, 05 Sep 2019 01:26:04 +0800</pubDate>
      
      <guid>https://sleepyman212.github.io/post/alphavsopacity/</guid>
      <description>&lt;h1 id=&#34;opacity-跟-background-差別&#34;&gt;opacity 跟 background 差別&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;opacity 子元素都會受影響，也會變成透明&lt;/li&gt;
&lt;li&gt;background-color 子元素就不會影響&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;example&#34;&gt;example&lt;/h2&gt;

&lt;h3 id=&#34;opacity&#34;&gt;opacity&lt;/h3&gt;

&lt;p&gt;&lt;style&gt;
.bg1{
background: url(&amp;ldquo;&lt;a href=&#34;https://i.imgur.com/Tbu2vFT.png&amp;quot;&#34;&gt;https://i.imgur.com/Tbu2vFT.png&amp;quot;&lt;/a&gt;);
width: 700px;
height: 500px;
background-position:center;
color:black;
font-size:8rem;
opacity:.6;
}
.bg1-txt{
width:100%;
height:100%;
display:flex;
justify-content:center;
align-items:center;
}
&lt;/style&gt;
&lt;div class=&#39;bg1&#39;&gt;
    &lt;div class=&#39;bg1-txt&#39;&gt;
        Test
    &lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-htmlmixed=&#34;&gt;&amp;lt;style&amp;gt;
.bg{
background: url(&amp;quot;https://i.imgur.com/Tbu2vFT.png&amp;quot;);
width: 800px;
height:600px;
background-position:center;
color:black;
font-size:8rem;
opacity:.6;
}
.bg-txt{
width:100%;
height:100%;
display:flex;
justify-content:center;
align-items:center;
}
&amp;lt;/style&amp;gt;
&amp;lt;div class=&#39;bg&#39;&amp;gt;
    &amp;lt;div class=&#39;bg-txt&#39;&amp;gt;
        Test
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;上面的範例連文字都會有透明&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;backgroud&#34;&gt;backgroud&lt;/h3&gt;

&lt;p&gt;&lt;style&gt;
.bg{
background: url(&amp;ldquo;&lt;a href=&#34;https://i.imgur.com/Tbu2vFT.png&amp;quot;&#34;&gt;https://i.imgur.com/Tbu2vFT.png&amp;quot;&lt;/a&gt;);
width: 700px;
height:500px;
background-position:center;
color:black;
font-size:8rem;
}
.bg-txt{
width:100%;
height:100%;
background: rgba(255,255,255,.3);
display:flex;
justify-content:center;
align-items:center;
}
&lt;/style&gt;
&lt;div class=&#39;bg&#39;&gt;
    &lt;div class=&#39;bg-txt&#39;&gt;
        Test
    &lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-htmlmixed=&#34;&gt;&amp;lt;style&amp;gt;
.bg{
background: url(&amp;quot;https://i.imgur.com/Tbu2vFT.png&amp;quot;);
width: 800px;
height:600px;
background-position:center;
color:black;
font-size:8rem;
}
.bg-txt{
width:100%;
height:100%;
background: rgba(255,255,255,.3);
display:flex;
justify-content:center;
align-items:center;
}
&amp;lt;/style&amp;gt;
&amp;lt;div class=&#39;bg&#39;&amp;gt;
    &amp;lt;div class=&#39;bg-txt&#39;&amp;gt;
        Test
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;文字不會透明了，只有背竟有透明一點&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=yxAGnwgzM4E&#34;&gt;CSS Opacity VS Alpha | Opacity 跟 Alpha的差異 | 調整透明度&lt;/a&gt;
&lt;a href=&#34;https://kknews.cc/zh-tw/tech/va6zgml.html&#34;&gt;CSS實現背景圖片透明，文字不透明效果&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fetch POST 傳遞資料</title>
      <link>https://sleepyman212.github.io/post/fetch_post/</link>
      <pubDate>Sun, 28 Jul 2019 22:45:06 +0800</pubDate>
      
      <guid>https://sleepyman212.github.io/post/fetch_post/</guid>
      <description>&lt;p&gt;最近剛好在使用 fetch 代替 ajax ，剛好遇到了一些小問題，所以寫下來提醒一下自己&lt;/p&gt;

&lt;p&gt;fetch 是一個新的 API 可以讓我們可以去做 AJAX ，而且用起來更直觀&lt;/p&gt;

&lt;p&gt;當要使用 fetch 來做 POST 我們可以用以下的寫法:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;fetch(URL,{
    method:&#39;POST&#39;,
    method: &#39;cors&#39;  // 用來作為 跨域請求用的
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;這樣就可以使用 fetch 發出 POST 的請求，當我們要附上資料時，可以用 FormData 這一個 class 來帶上我們的資料&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const fd = new FormData([可以直接指定 dom 元素是 form 的])&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const fd = FormData();
fd.append(&#39;key&#39;,value);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以用以上兩種方法來給 FormData 資料&lt;/p&gt;

&lt;p&gt;最後只需要把 FormData 帶入 fetch 中的欄位，就可以成功帶上資料了&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;fetch(URL,{
    method:&#39;POST&#39;,
    method: &#39;cors&#39;,  // 用來作為 跨域請求用的
    body: fd
})
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;這邊不需要去指定 Content-Type ，因為 fetch 會幫我們帶上適當的屬性&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Box Model</title>
      <link>https://sleepyman212.github.io/post/box_model/</link>
      <pubDate>Mon, 07 Jan 2019 04:38:38 +0800</pubDate>
      
      <guid>https://sleepyman212.github.io/post/box_model/</guid>
      <description>在 HTML 裡的每個元素都有一個 box-model，而 box-model 是用來表達一個元件的呈現方式，在 CSS 裡可以用 box-sizing 這個屬性去設定，以下是他可以設定的值 content-box &amp;ndash;&amp;gt; 預設的模</description>
    </item>
    
    <item>
      <title>製作評分星星的方法</title>
      <link>https://sleepyman212.github.io/post/%E8%A3%BD%E4%BD%9C%E8%A9%95%E5%88%86%E6%98%9F%E6%98%9F%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 16 Aug 2018 16:02:21 +0800</pubDate>
      
      <guid>https://sleepyman212.github.io/post/%E8%A3%BD%E4%BD%9C%E8%A9%95%E5%88%86%E6%98%9F%E6%98%9F%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>製作評分星星的方法 最近剛好在想要如何做評分星星的效果，所以就來做一下了 ps 如果有跑版把 .text li 裡的 width 條一下應該就可以了 成品 ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ .test{ height:</description>
    </item>
    
    <item>
      <title>Jquery prop and attr different</title>
      <link>https://sleepyman212.github.io/post/jquery_prop_data_different/</link>
      <pubDate>Sun, 12 Aug 2018 16:25:59 +0800</pubDate>
      
      <guid>https://sleepyman212.github.io/post/jquery_prop_data_different/</guid>
      <description>.prop() V.S. attr.() prop 是作用在 DOM 元素上 ，而 attr 是作用在 html 文檔上，當我們去取得還未設定的屬性時(ex:checked)，用 attr() 時，會傳 undifined ，因為 attr() 只會回傳 string 的型態</description>
    </item>
    
    <item>
      <title>Jquery 自訂過濾器</title>
      <link>https://sleepyman212.github.io/post/jquery_%E8%87%AA%E8%A8%82%E9%81%B8%E6%93%87%E5%99%A8/</link>
      <pubDate>Thu, 09 Aug 2018 05:46:59 +0800</pubDate>
      
      <guid>https://sleepyman212.github.io/post/jquery_%E8%87%AA%E8%A8%82%E9%81%B8%E6%93%87%E5%99%A8/</guid>
      <description>Jquery 自訂過濾器 有時候 jquery 的過濾器沒有辦法滿足我們的需求，我們就可以自訂 jquery 的過濾器 DEMO HTML &amp;lt;ul class=&amp;quot;levels&amp;quot;&amp;gt; &amp;lt;li data-level=&amp;quot;1&amp;quot; data-point=&amp;quot;1&amp;quot; data-technologies=&amp;quot;javascript node grunt&amp;quot;&amp;gt;Level 1&amp;lt;/li&amp;gt; &amp;lt;li data-level=&amp;quot;2&amp;quot; data-point=&amp;quot;10&amp;quot; data-technologies=&amp;quot;php composer&amp;quot;&amp;gt;Level 2&amp;lt;/li&amp;gt; &amp;lt;li data-level=&amp;quot;3&amp;quot; data-point=&amp;quot;100&amp;quot; data-technologies=&amp;quot;jquery requirejs&amp;quot;&amp;gt;Level 3&amp;lt;/li&amp;gt; &amp;lt;li data-level=&amp;quot;4&amp;quot; data-point=&amp;quot;1000&amp;quot; data-technologies=&amp;quot;javascript jquery backbone&amp;quot;&amp;gt;Level 4&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; 自</description>
    </item>
    
  </channel>
</rss>